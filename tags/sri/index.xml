<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SRI on Alepetepórico Blog</title>
    <link>https://alepeteporico.github.io/tags/sri/</link>
    <description>Recent content in SRI on Alepetepórico Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://alepeteporico.github.io/tags/sri/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Instalación y configuración de un servidor DNS esclavo </title>
      <link>https://alepeteporico.github.io/ejercicios/dns_ejercicio2/</link>
      <pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://alepeteporico.github.io/ejercicios/dns_ejercicio2/</guid>
      <description>creamos una máquina que actuara de DNS secundario, el primer paso será cambiar el hostname de está maquina.  vagrant@gutierrezvalencia:~$ hostname -f gutierrezvalencia.iesgn.org  Nos dirigimos al DNS primario y configuramos el fichero /etc/bind/named.conf.options  options { directory &amp;quot;/var/cache/bind&amp;quot;; allow-query { 10.0.0.0/24; }; allow-transfer { none; }; auth-nxdomain no; # conform to RFC1035 recursion no; dnssec-validation auto; listen-on-v6 { any; }; };  Y también debemos cambiar el /etc/bind/named.conf.local para añadir el rol de maestro.</description>
    </item>
    
    <item>
      <title>Servidor DHCP 2022</title>
      <link>https://alepeteporico.github.io/practicas/dhcp_2022/</link>
      <pubDate>Wed, 16 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://alepeteporico.github.io/practicas/dhcp_2022/</guid>
      <description>Creación del escenario  Primero creamos la imagen inicial.  virt-install --connect qemu:///system --cdrom /home/alejandrogv/Escritorio/ISOS/debian-11.1.0-amd64-netinst.iso --network network=bridge --name servidor --memory 1024 --vcpus 1 --disk size=10  Ahora con el volumen que se ha creado crearemos las imagenes de los clientes y el servidor.  sudo qemu-img create -b /var/lib/libvirt/images/servidor.qcow2 -f qcow2 /var/lib/libvirt/images/server.qcow2 sudo qemu-img create -b /var/lib/libvirt/images/servidor.qcow2 -f qcow2 /var/lib/libvirt/images/cliente1.qcow2 sudo qemu-img create -b /var/lib/libvirt/images/servidor.qcow2 -f qcow2 /var/lib/libvirt/images/cliente2.qcow2  Y creamos las máquinas a partir de estas imagenes  sudo virt-install --connect qemu:///system --name server --memory 1024 --vcpus 1 --disk /var/lib/libvirt/images/server.</description>
    </item>
    
    <item>
      <title>Correo en la VPS</title>
      <link>https://alepeteporico.github.io/practicas/correo/</link>
      <pubDate>Wed, 02 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://alepeteporico.github.io/practicas/correo/</guid>
      <description>Documenta una prueba de funcionamiento, donde envíes desde tu servidor local al exterior. Muestra el log donde se vea el envío. Muestra el correo que has recibido. Muestra el registro SPF.  debian@mrrobot:~$ mail tojandro@gmail.com Cc: Subject: prueba desde vps debian@mrrobot:~$ cat /var/log/mail.log Feb 2 07:39:58 mrrobot postfix/pickup[915259]: E42DCA0AB9: uid=1000 from=&amp;lt;debian@mrrobot.alejandrogv.site&amp;gt; Feb 2 07:39:58 mrrobot postfix/cleanup[916025]: E42DCA0AB9: message-id=&amp;lt;20220202073958.E42DCA0AB9@mrrobot.alejandrogv.site&amp;gt; Feb 2 07:39:58 mrrobot postfix/qmgr[915260]: E42DCA0AB9: from=&amp;lt;debian@mrrobot.alejandrogv.site&amp;gt;, size=375, nrcpt=1 (queue active) Feb 2 07:39:59 mrrobot postfix/smtp[916027]: connect to gmail-smtp-in.</description>
    </item>
    
    <item>
      <title>Ejercicio correo</title>
      <link>https://alepeteporico.github.io/ejercicios/ejercicio_correo/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://alepeteporico.github.io/ejercicios/ejercicio_correo/</guid>
      <description>Ejercicio 1: Envío local, entre usuarios del mismo servidor   Tenemos distintos parametros configurables, como por ejemplo en el fichero /etc/postfix/main.cf podemos configurar el parametro myorigin que es el dominio donde se va a enviar nuestro correo y mydestination se refiere a los dominios que considera que son suyos, si llegara algun correo a a cualquiera de los dominios que añadamos el servidor recibirá estos correos. Y otro que usaremos más adelante es el relayhost, aquí podremos añadir un servidor de correo que redirija nuestros envios.</description>
    </item>
    
    <item>
      <title>DNS, servidor web y base de datos</title>
      <link>https://alepeteporico.github.io/practicas/server_web_bbdd_dns/</link>
      <pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://alepeteporico.github.io/practicas/server_web_bbdd_dns/</guid>
      <description>Servidor DNS  Configuramos el fichero &amp;ldquo;/etc/bind/named.conf.options&amp;rdquo; y añadimos las siguientes líneas:   listen-on { any; }; allow-transfer { none; }; recursion yes; allow-recursion { any; }; *Configuramos el DNS local, la DMZ y externa en el fichero de configuración /etc/bind/named.conf.local:
view interna { match-clients { 10.0.1.0/24; 127.0.0.1; }; allow-recursion { any; }; zone &amp;quot;alegv.gonzalonazareno.org&amp;quot; { type master; file &amp;quot;db.alegv.interna&amp;quot;; }; zone &amp;quot;1.0.10.in-addr-arpa&amp;quot; { type master; file &amp;quot;db.1.0.10&amp;quot;; }; zone &amp;quot;16.</description>
    </item>
    
    <item>
      <title>Ejercicio 1 DNS</title>
      <link>https://alepeteporico.github.io/ejercicios/ejercico1_dns/</link>
      <pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://alepeteporico.github.io/ejercicios/ejercico1_dns/</guid>
      <description>Empezaremos a añadir las zonas de las que nuestro servidor tiene autoridad en el fichero /etc/bind/named.conf.local, dejandolo tal que así (tener en cuenta que hay que descomentar la primera línea).  include &amp;quot;/etc/bind/zones.rfc1918&amp;quot;; zone &amp;quot;iesgn.org&amp;quot; { type master; file &amp;quot;db.iesgn.org&amp;quot;; }; zone &amp;quot;0.0.10.in-addr.arpa&amp;quot; { type master; file &amp;quot;db.0.0.10&amp;quot;; };  Ahora definiremos los fichero db.iesgn.org y db.0.0.10 dentro de /var/cache/bind/ vamos primero con la zona directa:  $TTL 86400 @ IN SOA alegv.</description>
    </item>
    
    <item>
      <title>Módulos en apache</title>
      <link>https://alepeteporico.github.io/ejercicios/modulos_apache/</link>
      <pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://alepeteporico.github.io/ejercicios/modulos_apache/</guid>
      <description>UserDIR   Este módulo nos permitirá que cada usuario tenga una carpeta en su home llamada public_html donde podrá añadir contenido web.
  Vamos a instalar este módulo:
  vagrant@cmsagv:~$ sudo a2enmod userdir  Ahora creamos la carpeta public_html y le damos los permisos necesarios.  vagrant@cmsagv:~$ mkdir public_html vagrant@cmsagv:~$ sudo chmod 0755 public_html/  Y ya tenemos nuestro directorio donde podemos subir contenido. Aunque podemos cambiar el nombre de esta carpeta, vamos a llamarla personal y para que el módulo pueda ver el cambio vamos al fichero /etc/apache2/mods-enabled/php7.</description>
    </item>
    
    <item>
      <title>Configuración del escenario router-nat con vagrant y ansible</title>
      <link>https://alepeteporico.github.io/practicas/ejercicio3_vagrant_ansible/</link>
      <pubDate>Sat, 06 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://alepeteporico.github.io/practicas/ejercicio3_vagrant_ansible/</guid>
      <description></description>
    </item>
    
    <item>
      <title>DNS</title>
      <link>https://alepeteporico.github.io/apuntes/dns_2021/</link>
      <pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://alepeteporico.github.io/apuntes/dns_2021/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Servidor nginx</title>
      <link>https://alepeteporico.github.io/practicas/nginx/</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://alepeteporico.github.io/practicas/nginx/</guid>
      <description>Crea una máquina del cloud con una red pública. Añade la clave pública del profesor a la máquina. Instala el servidor web nginx en la máquina. Modifica la página index.html que viene por defecto y accede a ella desde un navegador.   La IP del servidor es la 172.22.201.5
  Una vez añadida la clave pública del profesor instalamos el servidor web nginx.
 debian@nginx:~$ sudo apt install nginx    Comprobamos que podemos acceder perfectamente desde fuera.</description>
    </item>
    
    <item>
      <title>Servidor DNS</title>
      <link>https://alepeteporico.github.io/practicas/dns/</link>
      <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://alepeteporico.github.io/practicas/dns/</guid>
      <description>En nuestra red local tenemos un servidor Web que sirve dos páginas web: www.iesgn.org, departamentos.iesgn.org
  Vamos a instalar en nuestra red local un servidor DNS (lo puedes instalar en el mismo equipo que tiene el servidor web)
  Voy a suponer en este documento que el nombre del servidor DNS va a ser pandora.iesgn.org. El nombre del servidor de tu prácticas será tunombre.iesgn.org.
   DNSmasq Instala el servidor dns dnsmasq en pandora.</description>
    </item>
    
    <item>
      <title>Configuración de apache mediante archivo .htaccess </title>
      <link>https://alepeteporico.github.io/ejercicios/apache_htaccess/</link>
      <pubDate>Sat, 24 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://alepeteporico.github.io/ejercicios/apache_htaccess/</guid>
      <description>Date de alta en un proveedor de hosting. ¿Si necesitamos configurar el servidor web que han configurado los administradores del proveedor?, ¿qué podemos hacer? Explica la directiva AllowOverride de apache2. Utilizando archivos .htaccess realiza las siguientes configuraciones:  El hosting que usaré será 000webhost  Habilita el listado de ficheros en la URL http://host.dominio/nas.   En nuestro hosting tendremos una carpeta llamada public_html en la cual podremos encontrar un fichero llamado .</description>
    </item>
    
    <item>
      <title>Control de acceso, autentificación y autorización</title>
      <link>https://alepeteporico.github.io/ejercicios/control_acceso/</link>
      <pubDate>Sat, 24 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://alepeteporico.github.io/ejercicios/control_acceso/</guid>
      <description>Crea un escenario en Vagrant o reutiliza uno de los que tienes en ejercicios anteriores, que tenga un servidor con una red publica, y una privada y un cliente conectada a la red privada. Crea un host virtual departamentos.iesgn.org  Para está práctica podremos usar la misma máquina de vagrant que usamos para las prácticas del cms y de mapeo.  A la URL departamentos.iesgn.org/intranet sólo se debe tener acceso desde el cliente de la red local, y no se pueda acceder desde la anfitriona por la red pública.</description>
    </item>
    
    <item>
      <title>Mapear URL a ubicaciones de un sistema de ficheros</title>
      <link>https://alepeteporico.github.io/ejercicios/mapeo/</link>
      <pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://alepeteporico.github.io/ejercicios/mapeo/</guid>
      <description>Crea un nuevo host virtual que es accedido con el nombre www.mapeo.com, cuyo DocumentRoot sea /srv/mapeo.   En primer lugar para que nuestro apache pueda acceder a /srv/ y reconocer esta ruta como DocumentRoot debemos modificar el fichero etc/apache2/apache2.conf y descomentar las siguientes líneas.
 &amp;lt;Directory /srv/&amp;gt; Options Indexes FollowSymLinks AllowOverride None Require all granted &amp;lt;/Directory&amp;gt;    Una vez hecho esto creamos la carpeta mapeo en /srv/ y añadimos el nuevo host virtual en sites-avaiable, veamos como quedaría el fichero de sites-avaiable.</description>
    </item>
    
    <item>
      <title>Servidor DHCP</title>
      <link>https://alepeteporico.github.io/practicas/dhcp/</link>
      <pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://alepeteporico.github.io/practicas/dhcp/</guid>
      <description>Lee el documento Teoría: Servidor DHCP y explica el funcionamiento del servidor DHCP resumido en este gráfico.  En primer lugar el cliente manda una petición DHCPDISCOVER en cuanto se inicia, ya que no tiene configuración de IP usa esta petición para ver si hay un servidor DHCP que pueda darle una dirección.
Después de esto el cliente esperará en estado SELECTING y recibirá las ofertas DHCPOFFER del servidor o servidores DHCP que pueda haber en nuestra red local.</description>
    </item>
    
    <item>
      <title>Servidor LEMP</title>
      <link>https://alepeteporico.github.io/practicas/lemp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alepeteporico.github.io/practicas/lemp/</guid>
      <description>Vamos a instalar todos los paquetes necesarios.  debian@mrrobot:~$ sudo apt install nginx mariadb-client mariadb-server php php-mysql php-fpm  También debemos instalar el servidor de aplicaciones php-fpm.  debian@mrrobot:~$ sudo apt install php7.4-fpm php7.4 Virtualhosting  Crearemos un virtual host en sites-available  server { listen 80; listen [::]:80; root /var/www/web; index index.html index.htm index.nginx-debian.html; server_name www.alejandrogv.site; location / { try_files $uri $uri/ =404; } }  Para que nuestro virtualhost por defecto sea este, debemos añadir la siguiente línea el el fichero default de el directorio sites-available, dentro del bloque server.</description>
    </item>
    
  </channel>
</rss>
